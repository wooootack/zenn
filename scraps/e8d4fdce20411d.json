{
  "title": "メソッドチェーンの使い所を考える",
  "closed": true,
  "archived": false,
  "created_at": "2021-11-12",
  "comments": [
    {
      "author": "wooootack",
      "created_at": "2021-11-12",
      "body_markdown": "## 原則: チェーンさせようとしているものが本当に変更される可能性がない場合のみ、メソッドチェーンを使って良い",
      "body_updated_at": "2021-11-12"
    },
    {
      "author": "wooootack",
      "created_at": "2021-11-12",
      "body_markdown": "### 具体的にどんな時には使って良いのか？\n\n- 言語そのものが持っている関数などは変更される可能性がほぼないので、問題ないと思われる\n- むしろそれくらいしかない気がする\n\n",
      "body_updated_at": "2021-11-12"
    },
    {
      "author": "wooootack",
      "created_at": "2021-11-12",
      "body_markdown": "### なぜ変更されやすい部分にメソッドチェーンを使わない方が良いのか？\n\n- 変更によって、メソッドが戻す値が変更した時点で破綻するから\n- つまり2つのメソッド同士が結合してしまっている",
      "body_updated_at": "2021-11-12"
    },
    {
      "author": "wooootack",
      "created_at": "2021-11-12",
      "body_markdown": "### そもそもなぜ変更しやすいような部分において、メソッドチェーンを使ってしまうのか？\n\n- Tell, Don't Ask の原則に従っていない\n  - 不用意に内部状態を外部から扱ってしまっている可能性がある"
    },
    {
      "author": "wooootack",
      "created_at": "2021-11-12",
      "body_markdown": "### それでもメソッドチェーンのように処理を続けたい時がある！\n\n- 間にDTOを挟むとかするとどうだろうか\n- 結局入出力のインターフェースは変更できないので、結合してしまっているような気もする",
      "body_updated_at": "2021-11-12"
    }
  ]
}