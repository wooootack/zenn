{
  "title": "エンタープライズアプリケーションアーキテクチャパターンを読む",
  "closed": true,
  "archived": false,
  "created_at": "2022-03-18",
  "comments": [
    {
      "author": "wooootack",
      "created_at": "2022-03-18",
      "body_markdown": "ビジネスイロジックに対応するのはトランザクションスクリプトの方がとりあえず分岐一個増やして対応みたいなことができるから、みんなドメインモデルよりトランザクションスクリプト書きがちなのかなー"
    },
    {
      "author": "wooootack",
      "created_at": "2022-03-18",
      "body_markdown": "割とここで書かれてる問題、リアクティブアーキテクチャなら解決できるのでは？と思ってしまう\nトランザクションを直列にしなきゃとか、スケーリングができないとか"
    },
    {
      "author": "wooootack",
      "created_at": "2022-03-18",
      "body_markdown": "プレゼンテーションは他社に対してシステムが提供するサービスの外部インターフェースである。\nこの場合、提供する相手が複雑な人間である、あまたは単純なリモートプログラムであるかは問わない。\n\nデータソースは、サービスを提供する者へのインターフェースである。\nクライアントが異なるとサービスの考え方が変わるので、これらを分けて考えることは有用であると私は考える。\n\nこの文章あんまり理解できなかった"
    },
    {
      "author": "wooootack",
      "created_at": "2022-03-18",
      "body_markdown": "バッチ処理からデータソースを呼ぶときと、普通のAPIのエンドポイントからデータソースを呼ぶときはインターフェース違うよね？そこを合わせる必要ないよね？みたいな話だと理解"
    }
  ]
}